Concept Sequence_Template(type Entry; evaluates Max_Length: Integer);
	uses String_Theory;
	requires Max_Length > 0;
 
	Type Family Sequence is modeled by Str(Entry);
		exemplar S;
		constraint |S| <= Max_Length;
		initialization ensures S = Empty_String;
    end;

	Operation Insert_after(evaluates Pos: Integer; alters E: Entry; updates S: Sequence);
		requires 0 <= Pos and Pos <= |S| and |S| < Max_Length;
		ensures S = (Prt_Btwn(#S, 0, Pos) o <#E>) o Prt_Btwn(#S, Pos, |#S|);
 
	Operation Remove_after(evaluates Pos: Integer; replaces R: Entry; updates S: Sequence);
        requires 0 <= Pos and Pos < |S| and |S| > 0;
        ensures S = (Prt_Btwn(#S, 0, Pos) o Prt_Btwn(#S, Pos + 1, |#S|)) and 
				R = Element_At(0, Prt_Btwn(#S, Pos, Pos + 1));

	Operation Length(restores S: Sequence): Integer;
		ensures Length = (|S|);
 
	Operation Rem_Capacity(restores S: Sequence): Integer;
		ensures Rem_Capacity = (Max_Length - |S|);
 
	Operation Clear(clears S: Sequence);
 
end Sequence_Template;